@model MyTask.WebUI.ViewModels.CustomerViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CustomerViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Customer Number</label>
            <div class="col-md-10">
                <input class="form-control" type="text" id="NumberValues" placeholder="NumberValues">
                <input class="form-control" type="text" id="NumberDetails" placeholder="NumberDetails">
                <input type="button" class="form-control btn btn-success" id="AddCustomerNumber" value="Add">
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Customer Numbers</label>
            <div class="col-md-10">
            <table>
                <tbody>
                </tbody>
            </table>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

            var customerNumberViewModel = {
                NumberValues: [],
                NumberDetails: []
            };

            $("#AddCustomerNumber").click(function () {
                var numberValues = $("#NumberValues").val();
                var numberDetails = $("#NumberDetails").val();
                var markup = "<tr><td>" + numberValues + "</td><td>" + numberDetails + "</td><td><input type='button' class='form-control btn btn-danger delete-row' name='NumberRecord' value='Delete'></td></tr>";

                customerNumberViewModel.NumberValues.push(numberValues);
                customerNumberViewModel.NumberDetails.push(numberDetails);

                $("table tbody").append(markup);
            });

            $(".delete-row").click(function () {
                console.log("enter delete click");
            });
        });
    </script>
}
